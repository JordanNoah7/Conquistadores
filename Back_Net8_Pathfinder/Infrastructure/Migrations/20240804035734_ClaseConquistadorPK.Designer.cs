// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240804035734_ClaseConquistadorPK")]
    partial class ClaseConquistadorPK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Actividad", b =>
                {
                    b.Property<int>("ActiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActiId"));

                    b.Property<decimal>("ActiCosto")
                        .HasColumnType("decimal(9,3)");

                    b.Property<string>("ActiDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ActiFechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ActiFechaInicio")
                        .HasColumnType("datetime");

                    b.Property<string>("ActiLugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ActiNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActiRequisitos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ActiId");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("Core.Entities.ActividadConquistador", b =>
                {
                    b.Property<int>("ActiId")
                        .HasColumnType("int");

                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<bool>("AccoAutorizado")
                        .HasColumnType("bit");

                    b.Property<string>("AccoDetalles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AccoFechaAutorizado")
                        .HasColumnType("datetime");

                    b.Property<bool>("AccoSaludPerfecta")
                        .HasColumnType("bit");

                    b.Property<int>("AccoTipoParticipacionId")
                        .HasColumnType("int");

                    b.Property<string>("AccoTipoParticipacionTabla")
                        .IsRequired()
                        .HasColumnType("nchar(3)");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ActiId", "ConqId");

                    b.HasIndex("ConqId");

                    b.HasIndex("AccoTipoParticipacionTabla", "AccoTipoParticipacionId");

                    b.ToTable("ActividadConquistadores");
                });

            modelBuilder.Entity("Core.Entities.Asistencia", b =>
                {
                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("AsisId")
                        .HasColumnType("int");

                    b.Property<byte>("AsisAnioBiblico")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AsisCuota")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AsisDevocion")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AsisDisciplina")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("AsisFecha")
                        .HasColumnType("datetime");

                    b.Property<byte>("AsisFrecuencia")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("AsisMonto")
                        .HasColumnType("decimal(9,3)");

                    b.Property<byte>("AsisRequerimiento")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AsisTotal")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ConqId", "AsisId");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("Core.Entities.Categoria", b =>
                {
                    b.Property<int>("CateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CateColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CateDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CateNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CateId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Core.Entities.Clase", b =>
                {
                    b.Property<int>("ClasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClasId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ClasColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ClasDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ClasImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClasNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClasId");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("Core.Entities.ClaseConquistador", b =>
                {
                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("ClasId")
                        .HasColumnType("int");

                    b.Property<int>("ClcoAnio")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("ClcoAprobado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ClcoFechaAprobado")
                        .HasColumnType("datetime");

                    b.Property<int>("ClcoTipoCargoClaseId")
                        .HasColumnType("int");

                    b.Property<string>("ClcoTipoCargoClaseTabla")
                        .IsRequired()
                        .HasColumnType("nchar(3)");

                    b.HasKey("ConqId", "ClasId", "ClcoAnio");

                    b.HasIndex("ClasId");

                    b.ToTable("ClaseConquistadores");
                });

            modelBuilder.Entity("Core.Entities.Conquistador", b =>
                {
                    b.Property<int>("PersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConqCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConqEscuela")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("ConqFechaInvestidura")
                        .HasColumnType("datetime");

                    b.Property<string>("ConqTurno")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PersApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PersApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PersCelular")
                        .IsRequired()
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("PersCiudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PersCorreoCorporativo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersCorreoPersonal")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersDireccionCasa")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PersDni")
                        .IsRequired()
                        .HasColumnType("nchar(8)");

                    b.Property<DateTime>("PersFechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<string>("PersNacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PersNombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersRegion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PersSexo")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("PersTelefono")
                        .HasColumnType("nvarchar(18)");

                    b.Property<int>("UsuaId")
                        .HasColumnType("int");

                    b.HasKey("PersId");

                    b.HasIndex("UsuaId")
                        .IsUnique();

                    b.ToTable("Conquistadores");
                });

            modelBuilder.Entity("Core.Entities.ConquistadorEspecialidad", b =>
                {
                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("EspeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CateId")
                        .HasColumnType("int");

                    b.Property<bool>("CoesCompleto")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CoesFechaCompleto")
                        .HasColumnType("datetime");

                    b.Property<string>("CoesFirma")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ConqId", "EspeId");

                    b.HasIndex("CateId", "EspeId");

                    b.ToTable("ConquistadorEspecialidades");
                });

            modelBuilder.Entity("Core.Entities.ConquistadorItemCuadernillo", b =>
                {
                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("ClasId")
                        .HasColumnType("int");

                    b.Property<int>("ItcuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CoicCompleto")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CoicFechaCompleto")
                        .HasColumnType("datetime");

                    b.Property<string>("CoicFirma")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ConqId", "ClasId", "ItcuId");

                    b.HasIndex("ClasId", "ItcuId");

                    b.ToTable("ConquistadorItemsCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Cronograma", b =>
                {
                    b.Property<int>("ClasId")
                        .HasColumnType("int");

                    b.Property<int>("ItcuId")
                        .HasColumnType("int");

                    b.Property<int>("CronAno")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CronEstaHecho")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CronFechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CronFechaInicio")
                        .HasColumnType("datetime");

                    b.HasKey("ClasId", "ItcuId", "CronAno");

                    b.ToTable("Cronogramas");
                });

            modelBuilder.Entity("Core.Entities.CuentaCorriente", b =>
                {
                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("CucoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CucoFecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("CucoMontoDepositado")
                        .HasColumnType("decimal(9,3)");

                    b.Property<decimal>("CucoMontoRetirado")
                        .HasColumnType("decimal(9,3)");

                    b.HasKey("ConqId", "CucoId");

                    b.ToTable("CuentasCorrientes");
                });

            modelBuilder.Entity("Core.Entities.Especialidad", b =>
                {
                    b.Property<int>("CateId")
                        .HasColumnType("int");

                    b.Property<int>("EspeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EspeDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EspeImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EspeNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CateId", "EspeId");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("Core.Entities.FichaMedica", b =>
                {
                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("FimeAnio")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FimeAlergias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FimeEnfermedades")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FimeObservaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FimeSangreRH")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("FimeVacunas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConqId", "FimeAnio");

                    b.ToTable("FichasMedicas");
                });

            modelBuilder.Entity("Core.Entities.Inscripcion", b =>
                {
                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("InscAnio")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("InscCompleto")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InscFecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("InscMonto")
                        .HasColumnType("decimal(9, 3)");

                    b.HasKey("ConqId", "InscAnio");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("Core.Entities.ItemCuadernillo", b =>
                {
                    b.Property<int>("ClasId")
                        .HasColumnType("int");

                    b.Property<int>("ItcuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ItcuDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClasId", "ItcuId");

                    b.ToTable("ItemsCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Parametro", b =>
                {
                    b.Property<int>("ParaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParaId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ParaNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ParaValor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParaId");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("Core.Entities.Rol", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoleDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RoleNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Core.Entities.Sesion", b =>
                {
                    b.Property<int>("UsuaId")
                        .HasColumnType("int");

                    b.Property<int>("SesiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("SesiFecha")
                        .HasColumnType("datetime");

                    b.HasKey("UsuaId", "SesiId");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("Core.Entities.Tipo", b =>
                {
                    b.Property<string>("TipoTabla")
                        .HasColumnType("nchar(3)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("TipoEstaActivo")
                        .HasColumnType("bit");

                    b.HasKey("TipoTabla", "TipoId");

                    b.ToTable("Tipos");
                });

            modelBuilder.Entity("Core.Entities.Tutor", b =>
                {
                    b.Property<int>("PersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PersApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PersApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PersCelular")
                        .IsRequired()
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("PersCiudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PersCorreoCorporativo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersCorreoPersonal")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersDireccionCasa")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PersDni")
                        .IsRequired()
                        .HasColumnType("nchar(8)");

                    b.Property<DateTime>("PersFechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<string>("PersNacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PersNombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PersRegion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PersSexo")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("PersTelefono")
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("TutoCentroTrabajo")
                        .IsRequired()
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("TutoDireccionTrabajo")
                        .IsRequired()
                        .HasColumnType("nvarchar(18)");

                    b.Property<int>("UsuaId")
                        .HasColumnType("int");

                    b.HasKey("PersId");

                    b.HasIndex("UsuaId")
                        .IsUnique();

                    b.ToTable("Tutores");
                });

            modelBuilder.Entity("Core.Entities.TutorConquistador", b =>
                {
                    b.Property<int>("TutoId")
                        .HasColumnType("int");

                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TucoTipoParentescoId")
                        .HasColumnType("int");

                    b.Property<string>("TucoTipoParentescoTabla")
                        .IsRequired()
                        .HasColumnType("nchar(3)");

                    b.HasKey("TutoId", "ConqId");

                    b.HasIndex("ConqId");

                    b.HasIndex("TucoTipoParentescoTabla", "TucoTipoParentescoId");

                    b.ToTable("TutorConquistadores");
                });

            modelBuilder.Entity("Core.Entities.Unidad", b =>
                {
                    b.Property<int>("UnidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnidId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UnidDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidGritoGuerra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidImagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UnidLema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UnidId");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("Core.Entities.UnidadConquistador", b =>
                {
                    b.Property<int>("UnidId")
                        .HasColumnType("int");

                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("UncoAno")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UncoCargoId")
                        .HasColumnType("int");

                    b.Property<string>("UncoCargoTabla")
                        .IsRequired()
                        .HasColumnType("nchar(3)");

                    b.HasKey("UnidId", "ConqId", "UncoAno");

                    b.HasIndex("ConqId");

                    b.ToTable("UnidadConquistadores");
                });

            modelBuilder.Entity("Core.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuaId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("UsuaCambiarContrasenia")
                        .HasColumnType("bit");

                    b.Property<string>("UsuaContrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuaUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Core.Entities.UsuarioRol", b =>
                {
                    b.Property<int>("UsuaId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuaId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsuarioRoles");
                });

            modelBuilder.Entity("Core.Entities.ActividadConquistador", b =>
                {
                    b.HasOne("Core.Entities.Actividad", "AccoActividad")
                        .WithMany("ActiParticipantes")
                        .HasForeignKey("ActiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Conquistador", "AccoConquistador")
                        .WithMany("ConqActividades")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Tipo", "AccoTipoParticipacion")
                        .WithMany("TipoActividades")
                        .HasForeignKey("AccoTipoParticipacionTabla", "AccoTipoParticipacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccoActividad");

                    b.Navigation("AccoConquistador");

                    b.Navigation("AccoTipoParticipacion");
                });

            modelBuilder.Entity("Core.Entities.Asistencia", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "AsisConquistador")
                        .WithMany("ConqAsistencias")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AsisConquistador");
                });

            modelBuilder.Entity("Core.Entities.ClaseConquistador", b =>
                {
                    b.HasOne("Core.Entities.Clase", "ClcoClase")
                        .WithMany("ClasConquistadores")
                        .HasForeignKey("ClasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Conquistador", "ClcoConquistador")
                        .WithMany("ConqClases")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClcoClase");

                    b.Navigation("ClcoConquistador");
                });

            modelBuilder.Entity("Core.Entities.Conquistador", b =>
                {
                    b.HasOne("Core.Entities.Usuario", "PersUsuario")
                        .WithOne("UsuaConquistador")
                        .HasForeignKey("Core.Entities.Conquistador", "UsuaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersUsuario");
                });

            modelBuilder.Entity("Core.Entities.ConquistadorEspecialidad", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "CoesConquistador")
                        .WithMany("ConqEspecialidades")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Especialidad", "CoesEspecialidad")
                        .WithMany("EspeConquistadores")
                        .HasForeignKey("CateId", "EspeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoesConquistador");

                    b.Navigation("CoesEspecialidad");
                });

            modelBuilder.Entity("Core.Entities.ConquistadorItemCuadernillo", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "CoicConquistador")
                        .WithMany("ConqItemsCuadernillo")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.ItemCuadernillo", "CoicItemCuadernillo")
                        .WithMany("ItcuConquistadores")
                        .HasForeignKey("ClasId", "ItcuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoicConquistador");

                    b.Navigation("CoicItemCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Cronograma", b =>
                {
                    b.HasOne("Core.Entities.ItemCuadernillo", "CronItemCuadernillo")
                        .WithMany("ItcuCronogramas")
                        .HasForeignKey("ClasId", "ItcuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CronItemCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.CuentaCorriente", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "CucoConquistador")
                        .WithMany("ConqCuentaCorriente")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CucoConquistador");
                });

            modelBuilder.Entity("Core.Entities.Especialidad", b =>
                {
                    b.HasOne("Core.Entities.Categoria", "EspeCategoria")
                        .WithMany("CateEspecialidades")
                        .HasForeignKey("CateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EspeCategoria");
                });

            modelBuilder.Entity("Core.Entities.FichaMedica", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "FimeConquistador")
                        .WithMany("ConqFichasMedicas")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FimeConquistador");
                });

            modelBuilder.Entity("Core.Entities.Inscripcion", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "InscConquistador")
                        .WithMany("ConqInscripciones")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InscConquistador");
                });

            modelBuilder.Entity("Core.Entities.ItemCuadernillo", b =>
                {
                    b.HasOne("Core.Entities.Clase", "ItcuClase")
                        .WithMany("ClasItemsCuadernillo")
                        .HasForeignKey("ClasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItcuClase");
                });

            modelBuilder.Entity("Core.Entities.Sesion", b =>
                {
                    b.HasOne("Core.Entities.Usuario", "SesiUsuario")
                        .WithMany("UsuaSesiones")
                        .HasForeignKey("UsuaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SesiUsuario");
                });

            modelBuilder.Entity("Core.Entities.Tutor", b =>
                {
                    b.HasOne("Core.Entities.Usuario", "PersUsuario")
                        .WithOne("UsuaTutor")
                        .HasForeignKey("Core.Entities.Tutor", "UsuaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersUsuario");
                });

            modelBuilder.Entity("Core.Entities.TutorConquistador", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "TucoConquistador")
                        .WithMany("ConqTutores")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Core.Entities.Tutor", "TucoTutor")
                        .WithMany("TutoConquistadores")
                        .HasForeignKey("TutoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Core.Entities.Tipo", "TucoTipoParentesco")
                        .WithMany("TipoParentescos")
                        .HasForeignKey("TucoTipoParentescoTabla", "TucoTipoParentescoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TucoConquistador");

                    b.Navigation("TucoTipoParentesco");

                    b.Navigation("TucoTutor");
                });

            modelBuilder.Entity("Core.Entities.UnidadConquistador", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "UncoConquistador")
                        .WithMany("ConqUnidades")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Unidad", "UncoUnidad")
                        .WithMany("UnidConquistadores")
                        .HasForeignKey("UnidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UncoConquistador");

                    b.Navigation("UncoUnidad");
                });

            modelBuilder.Entity("Core.Entities.UsuarioRol", b =>
                {
                    b.HasOne("Core.Entities.Rol", "UsroRol")
                        .WithMany("RoleUsuarios")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Usuario", "UsroUsuario")
                        .WithMany("UsuaRoles")
                        .HasForeignKey("UsuaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsroRol");

                    b.Navigation("UsroUsuario");
                });

            modelBuilder.Entity("Core.Entities.Actividad", b =>
                {
                    b.Navigation("ActiParticipantes");
                });

            modelBuilder.Entity("Core.Entities.Categoria", b =>
                {
                    b.Navigation("CateEspecialidades");
                });

            modelBuilder.Entity("Core.Entities.Clase", b =>
                {
                    b.Navigation("ClasConquistadores");

                    b.Navigation("ClasItemsCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Conquistador", b =>
                {
                    b.Navigation("ConqActividades");

                    b.Navigation("ConqAsistencias");

                    b.Navigation("ConqClases");

                    b.Navigation("ConqCuentaCorriente");

                    b.Navigation("ConqEspecialidades");

                    b.Navigation("ConqFichasMedicas");

                    b.Navigation("ConqInscripciones");

                    b.Navigation("ConqItemsCuadernillo");

                    b.Navigation("ConqTutores");

                    b.Navigation("ConqUnidades");
                });

            modelBuilder.Entity("Core.Entities.Especialidad", b =>
                {
                    b.Navigation("EspeConquistadores");
                });

            modelBuilder.Entity("Core.Entities.ItemCuadernillo", b =>
                {
                    b.Navigation("ItcuConquistadores");

                    b.Navigation("ItcuCronogramas");
                });

            modelBuilder.Entity("Core.Entities.Rol", b =>
                {
                    b.Navigation("RoleUsuarios");
                });

            modelBuilder.Entity("Core.Entities.Tipo", b =>
                {
                    b.Navigation("TipoActividades");

                    b.Navigation("TipoParentescos");
                });

            modelBuilder.Entity("Core.Entities.Tutor", b =>
                {
                    b.Navigation("TutoConquistadores");
                });

            modelBuilder.Entity("Core.Entities.Unidad", b =>
                {
                    b.Navigation("UnidConquistadores");
                });

            modelBuilder.Entity("Core.Entities.Usuario", b =>
                {
                    b.Navigation("UsuaConquistador")
                        .IsRequired();

                    b.Navigation("UsuaRoles");

                    b.Navigation("UsuaSesiones");

                    b.Navigation("UsuaTutor")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
