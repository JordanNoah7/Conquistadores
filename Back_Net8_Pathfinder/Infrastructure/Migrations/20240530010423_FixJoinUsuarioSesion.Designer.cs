// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240530010423_FixJoinUsuarioSesion")]
    partial class FixJoinUsuarioSesion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Entities.Actividad", b =>
                {
                    b.Property<int>("ActiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActiId"));

                    b.Property<decimal>("ActiCosto")
                        .HasColumnType("decimal(9,3)");

                    b.Property<string>("ActiDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ActiFechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ActiFechaInicio")
                        .HasColumnType("datetime");

                    b.Property<string>("ActiLugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ActiNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActiRequisitos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ActiId");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("Core.Entities.ActividadConquistador", b =>
                {
                    b.Property<int>("AccoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccoId"));

                    b.Property<int>("ActiId")
                        .HasColumnType("int");

                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("AccoTipoParticipacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AccoId", "ActiId", "ConqId");

                    b.HasIndex("AccoTipoParticipacionId");

                    b.HasIndex("ActiId");

                    b.HasIndex("ConqId");

                    b.ToTable("ActividadConquistadores");
                });

            modelBuilder.Entity("Core.Entities.Asistencia", b =>
                {
                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("AsisId")
                        .HasColumnType("int");

                    b.Property<byte>("AsisAnioBiblico")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AsisCuota")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AsisDevocion")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AsisDisciplina")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("AsisFecha")
                        .HasColumnType("datetime");

                    b.Property<byte>("AsisFrecuencia")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("AsisMonto")
                        .HasColumnType("decimal(9,3)");

                    b.Property<byte>("AsisRequerimiento")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AsisTotal")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ConqId", "AsisId");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("Core.Entities.Categoria", b =>
                {
                    b.Property<int>("CateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CateColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CateDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CateNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("CateId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Core.Entities.Clase", b =>
                {
                    b.Property<int>("ClasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClasId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ClasDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ClasNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ClasId");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("Core.Entities.Conquistador", b =>
                {
                    b.Property<int>("ConqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConqId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ClasId")
                        .HasColumnType("int");

                    b.Property<string>("ConqApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConqApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConqCelular")
                        .IsRequired()
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("ConqCorreoCorporativo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConqCorreoPersonal")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConqDni")
                        .IsRequired()
                        .HasColumnType("nchar(8)");

                    b.Property<DateTime?>("ConqFechaInvestidura")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ConqFechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<string>("ConqNombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ConqTelefono")
                        .HasColumnType("nvarchar(18)");

                    b.Property<int?>("UnidId")
                        .HasColumnType("int");

                    b.Property<int>("UsuaId")
                        .HasColumnType("int");

                    b.HasKey("ConqId");

                    b.HasIndex("ClasId");

                    b.HasIndex("UnidId");

                    b.HasIndex("UsuaId")
                        .IsUnique();

                    b.ToTable("Conquistadores");
                });

            modelBuilder.Entity("Core.Entities.ConquistadorEspecialidad", b =>
                {
                    b.Property<int>("CoesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoesId"));

                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("EspeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CoesId", "ConqId", "EspeId");

                    b.HasIndex("ConqId");

                    b.HasIndex("EspeId");

                    b.ToTable("ConquistadorEspecialidades");
                });

            modelBuilder.Entity("Core.Entities.ConquistadorItemCuadernillo", b =>
                {
                    b.Property<int>("CoicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoicId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CoicEstaCompleto")
                        .HasColumnType("bit");

                    b.Property<int?>("ConqId")
                        .HasColumnType("int");

                    b.Property<int?>("ItcuId")
                        .HasColumnType("int");

                    b.HasKey("CoicId");

                    b.HasIndex("ConqId");

                    b.HasIndex("ItcuId");

                    b.ToTable("ConquistadorItemsCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Cronograma", b =>
                {
                    b.Property<int>("CronId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CronId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CronEstaHecho")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CronFechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CronFechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int>("ItcuId")
                        .HasColumnType("int");

                    b.HasKey("CronId");

                    b.HasIndex("ItcuId");

                    b.ToTable("Cronogramas");
                });

            modelBuilder.Entity("Core.Entities.Especialidad", b =>
                {
                    b.Property<int>("EspeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EspeId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CateId")
                        .HasColumnType("int");

                    b.Property<string>("EspeDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EspeNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("EspeId");

                    b.HasIndex("CateId");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("Core.Entities.Inscripcion", b =>
                {
                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<int>("InscId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("InscFecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("InscMonto")
                        .HasColumnType("decimal(9, 3)");

                    b.HasKey("ConqId", "InscId");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("Core.Entities.ItemCuadernillo", b =>
                {
                    b.Property<int>("ItcuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItcuId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ClasId")
                        .HasColumnType("int");

                    b.Property<string>("ItcuDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItcuId");

                    b.HasIndex("ClasId");

                    b.ToTable("ItemsCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Parametro", b =>
                {
                    b.Property<int>("ParaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParaId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ParaNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ParaValor")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("ParaId");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("Core.Entities.Rol", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoleDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RoleNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Core.Entities.RolUsuario", b =>
                {
                    b.Property<int>("RousId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RousId"));

                    b.Property<int>("UsuaId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RousId", "UsuaId", "RoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UsuaId");

                    b.ToTable("RolesUsuario");
                });

            modelBuilder.Entity("Core.Entities.Sesion", b =>
                {
                    b.Property<int>("UsuaId")
                        .HasColumnType("int");

                    b.Property<int>("SesiId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("SesiFecha")
                        .HasColumnType("datetime");

                    b.HasKey("UsuaId", "SesiId");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("Core.Entities.Tipo", b =>
                {
                    b.Property<int>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("TipoEstaActivo")
                        .HasColumnType("bit");

                    b.Property<string>("TipoTabla")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.HasKey("TipoId");

                    b.ToTable("Tipos");
                });

            modelBuilder.Entity("Core.Entities.Tutor", b =>
                {
                    b.Property<int>("TutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TutoId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TutoApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TutoApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TutoCelular")
                        .IsRequired()
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("TutoCorreoCorporativo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TutoCorreoPersonal")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TutoDni")
                        .IsRequired()
                        .HasColumnType("nchar(8)");

                    b.Property<DateTime>("TutoFechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<string>("TutoNombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TutoTelefono")
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("TutoId");

                    b.ToTable("Tutores");
                });

            modelBuilder.Entity("Core.Entities.TutorConquistador", b =>
                {
                    b.Property<int>("TucoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TucoId"));

                    b.Property<int>("TutoId")
                        .HasColumnType("int");

                    b.Property<int>("ConqId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TucoParentescoId")
                        .HasColumnType("int");

                    b.HasKey("TucoId", "TutoId", "ConqId");

                    b.HasIndex("ConqId");

                    b.HasIndex("TucoParentescoId");

                    b.HasIndex("TutoId");

                    b.ToTable("TutorConquistadores");
                });

            modelBuilder.Entity("Core.Entities.Unidad", b =>
                {
                    b.Property<int>("UnidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnidId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UnidDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UnidGritoGuerra")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UnidLema")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UnidNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("UnidId");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("Core.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuaId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UsuaContrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuaUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Core.Entities.ActividadConquistador", b =>
                {
                    b.HasOne("Core.Entities.Tipo", "AccoTipoParticipacion")
                        .WithMany("TipoParticipaciones")
                        .HasForeignKey("AccoTipoParticipacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Actividad", "AccoActividad")
                        .WithMany("ActiParticipantes")
                        .HasForeignKey("ActiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Conquistador", "AccoConquistador")
                        .WithMany("ConqActividades")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccoActividad");

                    b.Navigation("AccoConquistador");

                    b.Navigation("AccoTipoParticipacion");
                });

            modelBuilder.Entity("Core.Entities.Asistencia", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "AsisConquistador")
                        .WithMany("ConqAsistencias")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AsisConquistador");
                });

            modelBuilder.Entity("Core.Entities.Conquistador", b =>
                {
                    b.HasOne("Core.Entities.Clase", "ConqClase")
                        .WithMany("ClasConquistadores")
                        .HasForeignKey("ClasId");

                    b.HasOne("Core.Entities.Unidad", "ConqUnidad")
                        .WithMany("UnidConquistadores")
                        .HasForeignKey("UnidId");

                    b.HasOne("Core.Entities.Usuario", "ConqUsuario")
                        .WithOne("UsuaConquistador")
                        .HasForeignKey("Core.Entities.Conquistador", "UsuaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConqClase");

                    b.Navigation("ConqUnidad");

                    b.Navigation("ConqUsuario");
                });

            modelBuilder.Entity("Core.Entities.ConquistadorEspecialidad", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "CoesConquistador")
                        .WithMany("ConqEspecialidades")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Especialidad", "CoesEspecialidad")
                        .WithMany("EspeConquistadores")
                        .HasForeignKey("EspeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoesConquistador");

                    b.Navigation("CoesEspecialidad");
                });

            modelBuilder.Entity("Core.Entities.ConquistadorItemCuadernillo", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "CoicConquistador")
                        .WithMany("ConqItemsCuadernillo")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Core.Entities.ItemCuadernillo", "CoicItemCuadernillo")
                        .WithMany("ItcuConquistadores")
                        .HasForeignKey("ItcuId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CoicConquistador");

                    b.Navigation("CoicItemCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Cronograma", b =>
                {
                    b.HasOne("Core.Entities.ItemCuadernillo", "CronItem")
                        .WithMany("ItcuCronogramas")
                        .HasForeignKey("ItcuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CronItem");
                });

            modelBuilder.Entity("Core.Entities.Especialidad", b =>
                {
                    b.HasOne("Core.Entities.Categoria", "EspeCategoria")
                        .WithMany("CateEspecialidades")
                        .HasForeignKey("CateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EspeCategoria");
                });

            modelBuilder.Entity("Core.Entities.Inscripcion", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "InscConquistador")
                        .WithMany("ConqInscripciones")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InscConquistador");
                });

            modelBuilder.Entity("Core.Entities.ItemCuadernillo", b =>
                {
                    b.HasOne("Core.Entities.Clase", "ItcuClase")
                        .WithMany("ClasItemsCuadernillo")
                        .HasForeignKey("ClasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItcuClase");
                });

            modelBuilder.Entity("Core.Entities.RolUsuario", b =>
                {
                    b.HasOne("Core.Entities.Rol", "RousRol")
                        .WithMany("RoleUsuarios")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Usuario", "RousUsuario")
                        .WithMany("UsuaRoles")
                        .HasForeignKey("UsuaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RousRol");

                    b.Navigation("RousUsuario");
                });

            modelBuilder.Entity("Core.Entities.Sesion", b =>
                {
                    b.HasOne("Core.Entities.Usuario", "SesiUsuario")
                        .WithMany("UsuaSesiones")
                        .HasForeignKey("UsuaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SesiUsuario");
                });

            modelBuilder.Entity("Core.Entities.TutorConquistador", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "TucoConquistador")
                        .WithMany("ConqTutores")
                        .HasForeignKey("ConqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Tipo", "TucoParentesco")
                        .WithMany("TipoParentescos")
                        .HasForeignKey("TucoParentescoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Tutor", "TucoTutor")
                        .WithMany("TutoConquistadores")
                        .HasForeignKey("TutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TucoConquistador");

                    b.Navigation("TucoParentesco");

                    b.Navigation("TucoTutor");
                });

            modelBuilder.Entity("Core.Entities.Actividad", b =>
                {
                    b.Navigation("ActiParticipantes");
                });

            modelBuilder.Entity("Core.Entities.Categoria", b =>
                {
                    b.Navigation("CateEspecialidades");
                });

            modelBuilder.Entity("Core.Entities.Clase", b =>
                {
                    b.Navigation("ClasConquistadores");

                    b.Navigation("ClasItemsCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Conquistador", b =>
                {
                    b.Navigation("ConqActividades");

                    b.Navigation("ConqAsistencias");

                    b.Navigation("ConqEspecialidades");

                    b.Navigation("ConqInscripciones");

                    b.Navigation("ConqItemsCuadernillo");

                    b.Navigation("ConqTutores");
                });

            modelBuilder.Entity("Core.Entities.Especialidad", b =>
                {
                    b.Navigation("EspeConquistadores");
                });

            modelBuilder.Entity("Core.Entities.ItemCuadernillo", b =>
                {
                    b.Navigation("ItcuConquistadores");

                    b.Navigation("ItcuCronogramas");
                });

            modelBuilder.Entity("Core.Entities.Rol", b =>
                {
                    b.Navigation("RoleUsuarios");
                });

            modelBuilder.Entity("Core.Entities.Tipo", b =>
                {
                    b.Navigation("TipoParentescos");

                    b.Navigation("TipoParticipaciones");
                });

            modelBuilder.Entity("Core.Entities.Tutor", b =>
                {
                    b.Navigation("TutoConquistadores");
                });

            modelBuilder.Entity("Core.Entities.Unidad", b =>
                {
                    b.Navigation("UnidConquistadores");
                });

            modelBuilder.Entity("Core.Entities.Usuario", b =>
                {
                    b.Navigation("UsuaConquistador")
                        .IsRequired();

                    b.Navigation("UsuaRoles");

                    b.Navigation("UsuaSesiones");
                });
#pragma warning restore 612, 618
        }
    }
}
