// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240528143855_ParametersAndSessions")]
    partial class ParametersAndSessions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConquistadorEspecialidad", b =>
                {
                    b.Property<int>("ConqEspecialidadesEspeID")
                        .HasColumnType("int");

                    b.Property<int>("EspeConquistadoresConqID")
                        .HasColumnType("int");

                    b.HasKey("ConqEspecialidadesEspeID", "EspeConquistadoresConqID");

                    b.HasIndex("EspeConquistadoresConqID");

                    b.ToTable("ConquistadorEspecialidad");
                });

            modelBuilder.Entity("Core.Entities.Actividad", b =>
                {
                    b.Property<int>("ActiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActiId"));

                    b.Property<decimal>("ActiCosto")
                        .HasColumnType("decimal(9,3)");

                    b.Property<string>("ActiDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("ActiFechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ActiFechaInicio")
                        .HasColumnType("datetime");

                    b.Property<string>("ActiLugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ActiNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ActiRequisitos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ActiId");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("Core.Entities.ActividadConquistador", b =>
                {
                    b.Property<int>("AccoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccoId"));

                    b.Property<int>("AccoActividadActiId")
                        .HasColumnType("int");

                    b.Property<int>("AccoConquistadorConqID")
                        .HasColumnType("int");

                    b.Property<string>("AccoTipo")
                        .IsRequired()
                        .HasColumnType("nchar(1)");

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AccoId");

                    b.HasIndex("AccoActividadActiId");

                    b.HasIndex("AccoConquistadorConqID");

                    b.ToTable("ActividadConquistadores");
                });

            modelBuilder.Entity("Core.Entities.Asistencia", b =>
                {
                    b.Property<int>("AsisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AsisID"));

                    b.Property<byte>("AsisAnioBiblico")
                        .HasColumnType("tinyint");

                    b.Property<int>("AsisConquistadorConqID")
                        .HasColumnType("int");

                    b.Property<byte>("AsisCuota")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AsisDevocion")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AsisDisciplina")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("AsisFecha")
                        .HasColumnType("datetime");

                    b.Property<byte>("AsisFrecuencia")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("AsisMonto")
                        .HasColumnType("decimal(9,3)");

                    b.Property<byte>("AsisRequerimiento")
                        .HasColumnType("tinyint");

                    b.Property<byte>("AsisTotal")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("AsisID");

                    b.HasIndex("AsisConquistadorConqID");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("Core.Entities.Categoria", b =>
                {
                    b.Property<int>("CateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateID"));

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CateColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CateDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("CateNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("CateID");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Core.Entities.Clase", b =>
                {
                    b.Property<int>("ClasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClasID"));

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ClasDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ClasNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ClasID");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("Core.Entities.Conquistador", b =>
                {
                    b.Property<int>("ConqID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConqID"));

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConqApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ConqApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ConqClaseClasID")
                        .HasColumnType("int");

                    b.Property<string>("ConqDni")
                        .IsRequired()
                        .HasColumnType("nchar(8)");

                    b.Property<DateTime?>("ConqFechaInvestidura")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ConqFechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<string>("ConqNombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ConqUnidadUnidID")
                        .HasColumnType("int");

                    b.Property<int>("ConqUsuarioUsuaID")
                        .HasColumnType("int");

                    b.HasKey("ConqID");

                    b.HasIndex("ConqClaseClasID");

                    b.HasIndex("ConqUnidadUnidID");

                    b.HasIndex("ConqUsuarioUsuaID");

                    b.ToTable("Conquistadores");
                });

            modelBuilder.Entity("Core.Entities.ConquistadorItemCuadernillo", b =>
                {
                    b.Property<int>("CoicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CoicId"));

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CoicEstaCompleto")
                        .HasColumnType("bit");

                    b.Property<int>("ConqID")
                        .HasColumnType("int");

                    b.Property<int>("ItcuID")
                        .HasColumnType("int");

                    b.HasKey("CoicId");

                    b.HasIndex("ConqID");

                    b.HasIndex("ItcuID");

                    b.ToTable("ConquistadorItemsCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Cronograma", b =>
                {
                    b.Property<int>("CronID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CronID"));

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("CronEstaHecho")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CronFechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CronFechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int>("CronItemItcuID")
                        .HasColumnType("int");

                    b.HasKey("CronID");

                    b.HasIndex("CronItemItcuID");

                    b.ToTable("Cronogramas");
                });

            modelBuilder.Entity("Core.Entities.Especialidad", b =>
                {
                    b.Property<int>("EspeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EspeID"));

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EspeCategoriaCateID")
                        .HasColumnType("int");

                    b.Property<string>("EspeDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EspeNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("EspeID");

                    b.HasIndex("EspeCategoriaCateID");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("Core.Entities.Inscripcion", b =>
                {
                    b.Property<int>("InscID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InscID"));

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("InscConquistadorConqID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InscFecha")
                        .HasColumnType("datetime");

                    b.Property<decimal>("InscMonto")
                        .HasColumnType("decimal(9, 3)");

                    b.HasKey("InscID");

                    b.HasIndex("InscConquistadorConqID");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("Core.Entities.ItemCuadernillo", b =>
                {
                    b.Property<int>("ItcuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItcuID"));

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ItcuClaseClasID")
                        .HasColumnType("int");

                    b.Property<string>("ItcuDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItcuID");

                    b.HasIndex("ItcuClaseClasID");

                    b.ToTable("ItemsCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Rol", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoleDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RoleNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Core.Entities.Unidad", b =>
                {
                    b.Property<int>("UnidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnidID"));

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UnidDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UnidGritoGuerra")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UnidLema")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("UnidNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("UnidID");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("Core.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuaID"));

                    b.Property<DateTime>("AudiFechCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AudiFechMod")
                        .HasColumnType("datetime");

                    b.Property<string>("AudiHostCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiHostMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserCrea")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AudiUserMod")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UsuaContrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuaUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UsuaID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.Property<int>("RoleUsuariosUsuaID")
                        .HasColumnType("int");

                    b.Property<int>("UsuaRolesRoleID")
                        .HasColumnType("int");

                    b.HasKey("RoleUsuariosUsuaID", "UsuaRolesRoleID");

                    b.HasIndex("UsuaRolesRoleID");

                    b.ToTable("RolUsuario");
                });

            modelBuilder.Entity("ConquistadorEspecialidad", b =>
                {
                    b.HasOne("Core.Entities.Especialidad", null)
                        .WithMany()
                        .HasForeignKey("ConqEspecialidadesEspeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Conquistador", null)
                        .WithMany()
                        .HasForeignKey("EspeConquistadoresConqID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.ActividadConquistador", b =>
                {
                    b.HasOne("Core.Entities.Actividad", "AccoActividad")
                        .WithMany("ActiParticipantes")
                        .HasForeignKey("AccoActividadActiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Conquistador", "AccoConquistador")
                        .WithMany("ConqActividades")
                        .HasForeignKey("AccoConquistadorConqID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccoActividad");

                    b.Navigation("AccoConquistador");
                });

            modelBuilder.Entity("Core.Entities.Asistencia", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "AsisConquistador")
                        .WithMany("ConqAsistencias")
                        .HasForeignKey("AsisConquistadorConqID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AsisConquistador");
                });

            modelBuilder.Entity("Core.Entities.Conquistador", b =>
                {
                    b.HasOne("Core.Entities.Clase", "ConqClase")
                        .WithMany("ClasConquistadores")
                        .HasForeignKey("ConqClaseClasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Unidad", "ConqUnidad")
                        .WithMany("UnidConquistadores")
                        .HasForeignKey("ConqUnidadUnidID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Usuario", "ConqUsuario")
                        .WithMany()
                        .HasForeignKey("ConqUsuarioUsuaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConqClase");

                    b.Navigation("ConqUnidad");

                    b.Navigation("ConqUsuario");
                });

            modelBuilder.Entity("Core.Entities.ConquistadorItemCuadernillo", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "CoicConquistador")
                        .WithMany("ConqItemsCuadernillo")
                        .HasForeignKey("ConqID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Entities.ItemCuadernillo", "CoicItemCuadernillo")
                        .WithMany("ItcuConquistadores")
                        .HasForeignKey("ItcuID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CoicConquistador");

                    b.Navigation("CoicItemCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Cronograma", b =>
                {
                    b.HasOne("Core.Entities.ItemCuadernillo", "CronItem")
                        .WithMany("ItcuCronogramas")
                        .HasForeignKey("CronItemItcuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CronItem");
                });

            modelBuilder.Entity("Core.Entities.Especialidad", b =>
                {
                    b.HasOne("Core.Entities.Categoria", "EspeCategoria")
                        .WithMany("CateEspecialidades")
                        .HasForeignKey("EspeCategoriaCateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EspeCategoria");
                });

            modelBuilder.Entity("Core.Entities.Inscripcion", b =>
                {
                    b.HasOne("Core.Entities.Conquistador", "InscConquistador")
                        .WithMany("ConqInscripciones")
                        .HasForeignKey("InscConquistadorConqID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InscConquistador");
                });

            modelBuilder.Entity("Core.Entities.ItemCuadernillo", b =>
                {
                    b.HasOne("Core.Entities.Clase", "ItcuClase")
                        .WithMany("ClasItemsCuadernillo")
                        .HasForeignKey("ItcuClaseClasID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItcuClase");
                });

            modelBuilder.Entity("RolUsuario", b =>
                {
                    b.HasOne("Core.Entities.Usuario", null)
                        .WithMany()
                        .HasForeignKey("RoleUsuariosUsuaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.Rol", null)
                        .WithMany()
                        .HasForeignKey("UsuaRolesRoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entities.Actividad", b =>
                {
                    b.Navigation("ActiParticipantes");
                });

            modelBuilder.Entity("Core.Entities.Categoria", b =>
                {
                    b.Navigation("CateEspecialidades");
                });

            modelBuilder.Entity("Core.Entities.Clase", b =>
                {
                    b.Navigation("ClasConquistadores");

                    b.Navigation("ClasItemsCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.Conquistador", b =>
                {
                    b.Navigation("ConqActividades");

                    b.Navigation("ConqAsistencias");

                    b.Navigation("ConqInscripciones");

                    b.Navigation("ConqItemsCuadernillo");
                });

            modelBuilder.Entity("Core.Entities.ItemCuadernillo", b =>
                {
                    b.Navigation("ItcuConquistadores");

                    b.Navigation("ItcuCronogramas");
                });

            modelBuilder.Entity("Core.Entities.Unidad", b =>
                {
                    b.Navigation("UnidConquistadores");
                });
#pragma warning restore 612, 618
        }
    }
}
